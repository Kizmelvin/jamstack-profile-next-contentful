{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kenny/Desktop/my-next-project/pages/talks/index.js\";\nimport TalksList from \"../../components/TalksList\";\nimport SocialLinks from \"../../components/SocialLinks\";\n\nfunction Talks(_ref) {\n  var talkContents = _ref.talkContents,\n      details = _ref.details,\n      links = _ref.links;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TalksList, {\n      talkContents: talkContents,\n      details: details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SocialLinks, {\n      links: links\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Talks;\nexport var __N_SSG = true;\nexport default Talks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Talks\");","map":{"version":3,"sources":["/Users/kenny/Desktop/my-next-project/pages/talks/index.js"],"names":["TalksList","SocialLinks","Talks","talkContents","details","links"],"mappings":";;;AACA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AA4BA,SAASC,KAAT,OAAiD;AAAA,MAAhCC,YAAgC,QAAhCA,YAAgC;AAAA,MAAlBC,OAAkB,QAAlBA,OAAkB;AAAA,MAATC,KAAS,QAATA,KAAS;AAC/C,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,YAAY,EAAEF,YAAzB;AAAuC,MAAA,OAAO,EAAEC;AAAhD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;KAPQH,K;;AAST,eAAeA,KAAf","sourcesContent":["import Client from \"../../contentful/Contentful\";\nimport TalksList from \"../../components/TalksList\";\nimport SocialLinks from \"../../components/SocialLinks\";\n\nexport async function getStaticProps() {\n  const data = await Client.getEntries({\n    content_type: \"blogPostTalks\",\n  });\n  const data1 = await Client.getEntries({\n    content_type: \"blogPost\",\n  });\n  const data2 = await Client.getEntries({\n    content_type: \"blogLinks\",\n  });\n\n  if (!data || !data1) {\n    return {\n      notFound: true,\n    };\n  }\n\n  return {\n    props: {\n      talkContents: data.items,\n      details: data1.items,\n      links: data2.items,\n    },\n  };\n}\n\nfunction Talks({ talkContents, details, links }) {\n  return (\n    <>\n      <TalksList talkContents={talkContents} details={details} />\n      <SocialLinks links={links} />\n    </>\n  );\n}\n\nexport default Talks;\n"]},"metadata":{},"sourceType":"module"}