{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kenny/Desktop/my-next-project/pages/talks/index.js\";\n\nfunction Talks(_ref) {\n  var _this = this;\n\n  var contents = _ref.contents;\n  console.log(contents);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Talks\", contents.map(function (conten) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: conten.fields.body.content[0].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this)\n      }, conten.sys.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Talks;\nexport var __N_SSG = true;\nexport default Talks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Talks\");","map":{"version":3,"sources":["/Users/kenny/Desktop/my-next-project/pages/talks/index.js"],"names":["Talks","contents","console","log","map","conten","fields","body","content","value","sys","id"],"mappings":";;;AA2BA,SAASA,KAAT,OAA6B;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,sBACE;AAAA,wBAEGA,QAAQ,CAACG,GAAT,CAAa,UAACC,MAAD;AAAA,0BACZ;AAAA,+BACE;AAAA,oBAAKA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,OAAnB,CAA2B,CAA3B,EAA8BC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF,SAAUJ,MAAM,CAACK,GAAP,CAAWC,EAArB;AAAA;AAAA;AAAA;AAAA,eADY;AAAA,KAAb,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAZQX,K;;AAcT,eAAeA,KAAf","sourcesContent":["import { createClient } from \"contentful\";\n\nlet Client = createClient({\n  accessToken: \"8QL6d7ViHyhY3g29-Iy5DHH18XCT8W3CMDV_Q-dafMs\",\n  space: \"tbpou4ypel8r\",\n});\n\nexport async function getStaticProps() {\n  const data = await Client.getEntries({\n    content_type: \"blogPost\",\n    content_type: \"blogPostArticle\",\n  });\n  // const data = await res.json();\n\n  if (!data) {\n    return {\n      notFound: true,\n    };\n  }\n\n  return {\n    props: {\n      contents: data.items,\n    }, // will be passed to the page component as props\n  };\n}\n\nfunction Talks({ contents }) {\n  console.log(contents);\n  return (\n    <div>\n      Talks\n      {contents.map((conten) => (\n        <div key={conten.sys.id}>\n          <h1>{conten.fields.body.content[0].value}</h1>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Talks;\n"]},"metadata":{},"sourceType":"module"}